Java语言特点：
1.语法简单，功能强大，安全可靠。
2.与平台无关。
3.解释编译两种运行方式。
4.多线程。
5.动态执行兼有丰富的API文档及类库。

Java程序分类：
1.Java应用程序（Java Application）
2.Java小应用程序（Java Applet）

集成开发环境（IDE）功能：
代码编辑器、编译器、调试器、图形用户界面

面向对象的方法学内容：
面向对象的分析、面向对象的设计、面向对象的程序设计

Java中的3种注释形式：
1.//开始一直到行尾
2./* */多行注释
3./** */文档注释

Java程序结构包含的内容：
    1.package语句：包语句，每个文件最多只有一个，且必须放在文件开始的地方。
    2.import语句：引入语句，可以没有，也可以有多个，如果有import语句，必须放在所有类定义的前面。
    3.具有public权限的类定义：每个文件中最多有一个。
    4.类定义：每个文件中包含的非public权限的类定义的个数没有限制。
    5.接口定义：每个文件中包含的接口定义个数没有限制。

语句与表达式的相同点和不同点：
1.有的表达式可以当作语句，但并不是所有语句都是表达式。
2.每个表达式都会得到一个至，虽然语句也会有一个值，但这个值并不是语句的计算结果，而是执行结果。

异常分类：
1.受检异常，必须被处理。
2.运行时异常，不需要处理。
3.错误，不需要处理。

方法定义的说明：
1.方法名必须是一个合法的标识符。
2.返回类型是方法返回值的类型。
3.修饰符段可以含有几个不同的修饰符。
4.参数列表是传送给方法的参数表。表中各元素间以逗号分隔。
5.块标识方法体，是要实际执行的代码段，由一对大括号括起来的语句序列。

重载方法的规则：
1.调用语句的实参必须足够判断要调用的是哪个方法。实参的类型可能要进行正常的扩展提升。
2.方法的返回类型可以相同也可以不同。重载方法的参数列表必须不同。

使用静态方法时的限制：
1.由于静态方法可以在没有定义所属的类的对象的情况下加以调用，故不存在this值。
2.静态方法不能被重写。

Vector类的成员变量：
1.int capacityIncrement：增量的大小。如果值为0，则缓冲区每次倍增。
2.int elementCount：对象中元素的数量。
3.Object elementData：元素存储的数组缓冲区。

Vector类的构造：
1.Vector（）：空向量
2.Vector（int initialCapacity）：指定初始存储量
3.Vector（int initialCapacity， int capacityIncrement）：指定初始容量和容量增量


Vector添加元素：
1.addElement(Object obj)
2.insertElementAt(Object obj, int index)
3.add(int index, Object obj)

Vector修改或删除：
1.setElementAt（Object obj， int index）
2.removeElement（Object obj）
3.removeElementAt（int index）
4.removeAllElement（）

Vector查询：
1.elementAt(int index);
2.contains(Object obj)
3.indexOf(Object obj, int start_index)
4.lastIndexOf(Object obj, int start_index)