进程调度功能含义：
由操作系统内核的进程调度程序完成，从调用内核函数schedule（）开始。

进程调度的时机：
进程运行结束、进程阻塞、中断返回、当前运行进程的时间片用完。

选择调度方式的算法的准则：
1.周转时间短
2.响应时间快
3.截止时间的保证
4.系统吞吐量高
5.处理机利用率好

多级反馈队列算法设计要考虑的问题：
1.就绪队列的数量
2.根据进程优先权确定进程应该进入哪个就绪队列的算法。
3.确定进程何时转移到较高优先权队列的算法。
4.确定进程何时转移到较低优先权队列的算法。

实现实时调度的基本条件：
1.提供必要的调度信息
2.系统处理能力强
3.采用抢占式调度机制
4.具有快速切换机制

为了实现实时调度，系统需要提供的信息：
就绪时间、开始截止时间和完成截止时间、处理时间、资源要求、优先级

进程切换的步骤：
1.保存程序计数器和其他寄存器在内的CPU上下文环境。
2.更新被替换进程的进程控制块。
3.修改进程状态，把执行态改为就绪态或阻塞态。
4.将被替换的程序控制块移动到就绪队列或阻塞队列。
5.通过执行进程调度程序选择新进程
6.更新内存管理的数据结构
7.恢复被调度程序选中进程的上下文。

处理器分类：
紧密耦合多处理器系统、松弛耦合多处理器系统
对称多处理器系统、非对称多处理器系统

自调度算法的优缺点：
易移植、有利于提高CPU的利用率。
瓶颈问题、低效性、线程切换频繁

产生死锁的必要条件：
1.互斥条件：一个进程在访问资源的过程中，其他进程不能访问该资源。
2.请求和保持条件：以及获取了一些资源，又提出了新的资源要求。
3.不剥夺条件：进程获得的资源不能被剥夺，只能由进程自己释放。
4.环路等待

处理死锁的基本方法：
预防死锁、避免死锁、检测并解除死锁、忽略死锁

采用终止部分进程方法解除死锁时考虑的因素：
1.进程的优先级
2.进程已执行了多久，还需多长时间
3.进程使用了多少资源
4.进程需要多少资源才能完成
5.需要终止多少进程才能解除死锁
6.进程时交互的还是批处理的

静态链接定义、任务、：
在程序运行前，用链接程序将目标模块链接成一个完整的装入模块。
1.对逻辑地址进行修改 2.变换外部调用符号

重定位定义：
在程序装入时对目标程序中的指令和数据地址的修改过程。

可重定位方式的特点：
1.编译程序使目标模块的起始地址从0开始。
2.装入程序根据内存的使用情况将装入模块装入到内存的某个位置，并对模块进行重定位。

连续分配方式的分类：
单一连续区分配、固定分区分配、动态分区分配

动态分区分配算法包括：
首次适应算法、循环适应算法、最佳适应算法

快表定义：
提高CPU访问速度而采用的专用缓存，用来存放最近被访问过的页表项。

两级页表寻址的地址映射过程：
1.对应给定的逻辑地址A，由硬件从中分离出页目录号p1、页号p2和页内地址d。
2.由页表寄存器的值和页目录号p1，从存放页目录的页框中找到页表所在的页框号。
页表所在的页框号的地址=页目录起始地址+p1*页表项长度，从该地址指示的物理内存单元
中读取所在的页框号。
3.由页表所在的页框号和页号p2，从存放页表的页框中找到进程页所在的页框号。
4.A的物理地址=进程页所在的页框号*页框大小+页内地址d

空闲页框链表定义：
按地址递增的顺序排序，每个结点中包含页框的地址信息，指向后面结点的指针和指向前面结点的指针。

虚拟存储技术的好处：
1.提高内存利用率
2.提高多道程序度
3.把逻辑地址空间和物理地址空间分开

虚拟存储系统的主要特征：
1.离散性
2.多次性
3.对换性
4.虚拟性

缺页异常机构的具体过程：
在访问内存过程中发现缺页时产生缺页异常信号，使CPU中断当前控制流的执行，转去执行操作系统的缺页异常
处理程序，完成请求调页。
1.分页硬件通过页表完成逻辑地址到物理地址的映射，通过检查页表中的状态位，判断当前被访问的页是否在内存中。
如果不在，则产生缺页异常信号。
2.执行操作系统的缺页异常处理过程。先在内存中为请求调入的页找一个空闲页框。然后，调度磁盘操作，把需要的页
装入到空闲页框中。
3.修改页表，更新以及调入页的存在位、在内存中的页框号、访问位和保护位等字段的值。
4.重新开始执行因缺页而被中断的指令。

抖动的预防：
1.采取局部置换策略
2.在CPU调度程序中引入工作集算法
3.挂起若干进程

根据逻辑地址s：d，求物理地址：
1.以段号s作索引，从段表中找到段号为s的段表项。
2.从找到的段表项中读取s段的基地址和段大小。
3.将段基址与偏移地址相加。

两个块称为伙伴的条件：
1.两个块具有相同大小。
2.他们的物理地址使连续的。









